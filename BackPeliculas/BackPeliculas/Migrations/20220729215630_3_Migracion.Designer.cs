// <auto-generated />
using System;
using BackPeliculas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackPeliculas.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220729215630_3_Migracion")]
    partial class _3_Migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackPeliculas.Models.DetallePelicula", b =>
                {
                    b.Property<Guid>("DetallePeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdGeneroNavigationGeneroId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPeliculaNavigationPeliculaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPersonajesNavigationPersonajeId")
                        .HasColumnType("uuid");

                    b.HasKey("DetallePeliculaId");

                    b.HasIndex("IdGeneroNavigationGeneroId");

                    b.HasIndex("IdPeliculaNavigationPeliculaId");

                    b.HasIndex("IdPersonajesNavigationPersonajeId");

                    b.ToTable("DetallePeliculas");
                });

            modelBuilder.Entity("BackPeliculas.Models.Genero", b =>
                {
                    b.Property<Guid>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GeneroId");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("BackPeliculas.Models.Pelicula", b =>
                {
                    b.Property<Guid>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Calificacion")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaAlta")
                        .HasColumnType("date");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PeliculaId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("BackPeliculas.Models.Personaje", b =>
                {
                    b.Property<Guid>("PersonajeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Edad")
                        .HasColumnType("integer");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.HasKey("PersonajeId");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("BackPeliculas.Models.DetallePelicula", b =>
                {
                    b.HasOne("BackPeliculas.Models.Genero", "IdGeneroNavigation")
                        .WithMany("DetallePeliculas")
                        .HasForeignKey("IdGeneroNavigationGeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackPeliculas.Models.Pelicula", "IdPeliculaNavigation")
                        .WithMany("DetallePeliculas")
                        .HasForeignKey("IdPeliculaNavigationPeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackPeliculas.Models.Personaje", "IdPersonajesNavigation")
                        .WithMany("DetallePeliculas")
                        .HasForeignKey("IdPersonajesNavigationPersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdGeneroNavigation");

                    b.Navigation("IdPeliculaNavigation");

                    b.Navigation("IdPersonajesNavigation");
                });

            modelBuilder.Entity("BackPeliculas.Models.Genero", b =>
                {
                    b.Navigation("DetallePeliculas");
                });

            modelBuilder.Entity("BackPeliculas.Models.Pelicula", b =>
                {
                    b.Navigation("DetallePeliculas");
                });

            modelBuilder.Entity("BackPeliculas.Models.Personaje", b =>
                {
                    b.Navigation("DetallePeliculas");
                });
#pragma warning restore 612, 618
        }
    }
}
